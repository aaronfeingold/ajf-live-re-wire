name: Deploy AWS Lambda

on:
  push:
    branches:
      - main  # Adjust based on your branch preference

jobs:
  build_and_deploy:
    runs-on: ubuntu-latest  # This runs on an Ubuntu VM but we'll mimic Fedora package installation

    steps:
      - name: Checkout code
        uses: actions/checkout@v2

      # Install Fedora dependencies required for pyenv
      - name: Install system dependencies
        run: |
          sudo dnf install -y gcc zlib-devel bzip2 bzip2-devel readline-devel sqlite sqlite-devel \
          openssl-devel tk-devel libffi-devel xz-devel git curl wget make

      # Install pyenv on the GitHub runner
      - name: Install pyenv
        run: |
          curl https://pyenv.run | bash
          echo 'export PATH="$HOME/.pyenv/bin:$PATH"' >> $GITHUB_ENV
          echo 'eval "$(pyenv init --path)"' >> $GITHUB_ENV
          echo 'eval "$(pyenv init -)"' >> $GITHUB_ENV
          echo 'eval "$(pyenv virtualenv-init -)"' >> $GITHUB_ENV
        shell: bash

      # Install Python 3.11 using pyenv
      - name: Install Python 3.11 using pyenv
        run: |
          source $HOME/.bashrc
          pyenv install 3.11.0
          pyenv global 3.11.0
        shell: bash

      # Install pipenv
      - name: Install pipenv
        run: |
          pip install pipenv

      # Install Python dependencies with pipenv
      - name: Install project dependencies
        run: |
          pipenv install --deploy --ignore-pipfile

      # Package the Lambda function (assumes your lambda function is in `main.py`)
      - name: Create zip file for Lambda function
        run: |
          zip -r function.zip main.py

      # Configure AWS credentials securely from GitHub Secrets
      - name: Configure AWS Credentials
        uses: aws-actions/configure-aws-credentials@v1
        with:
          aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY_ID }}
          aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
          aws-region: ${{ secrets.AWS_DEFAULT_REGION }}

      # Deploy Lambda function using AWS CLI
      - name: Deploy Lambda Function
        run: |
          aws lambda update-function-code --function-name your_lambda_function --zip-file fileb://function.zip

      # Deploy API Gateway
      - name: Deploy API Gateway
        run: |
          aws apigateway create-deployment --rest-api-id your_api_id --stage-name prod
